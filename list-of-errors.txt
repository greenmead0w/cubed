He creado el mapa test_map_2 copiando el test_map para hacer las pruebas.

Resultados:

El tema sobre que no se abría el fichero en función de la ruta relativa -> OK

Igual más adelante hay que añadir la comprobación de que la textura tenga
extension xpm por si otro formato da problemas con la librería gráfica.

Revisar take_partial_colors, number > 255 -> NOT_OK ||| (mikel) dices not ok porque printea "Error allocating memory"?  Sí

Creo que hay que revisar check_map para revisar 4 posicines y no 8. Al final de las líneas 19 y 20 en test_map_2 hay un 0 que no está rodeado por 1 y da correcto. Es difícil controlar 8 espacios para todas las posibilidades. 

Con un fichero de nombre .cub da un mensaje de WRONG_FORMAT en vez de WRONG_EXT
-> ¿damos por bueno o no?. Como acaba en .cub da la extensión por buena. ||| (mikel) en relación a esto: "./cub3D .cub" da file extension error, bien? Sí
-> OK

Una letra de color mal -> OK

Una letra de textura mal -> OK
Si las 2 primeras letras son correctas y se añade una tercera letra, el error
que sale es PATH. Lo veo correcto porque según el subject los tipos de 
información de los elementos pueden (can) estar separados por uno o más espacios, y de esta forma si se añade una tercera letra no hay forma de saber si se
trata del path a la textura o de la orientación. Se podría diferenciar si fuese 
obligatorio un espacio de separación. ||| (mikel) veo correcto error de PATH 

textura o color con líneas en medio -> OK

un color en medio de una textura -> OK

una textura en medio de un color -> OK

Doble color -> OK

Doble textura -> OK

Color incompleto -> OK

Textura incompleta -> OK

Color con más info de la necesaria -> OK

Textura con más info de la necesaria -> OK

||| 

(mikel)
nombre mapa: wrong_0_rgb.cub 
status: not ok --> si el color rgb es 0 devuelve "error allocating memory" take_partial_colors no procesa bien que partial_color == 0 (returnea -1)
-> OK (corregido)


(mikel)
mapa: wrong_file_format.cub
printea muchos mensajes de error antes de sacar del programa (modificar parse_items y/o examine_line (WRNG_FILE))
-> OK (sale sólo con un mensaje WRONG_FILE)


(mikel)
doubts_mixed_type.cub
damos por válido? el subject dice que el orden de colors y textures puede ser cualquiera, pero no se si el orden dentro de cada tipo de elemento 
se puede cambiar
-> OK (veo el mapa correcto, dentro de color y textures deben aparecer
       lo primero las letras) 


(mikel)
doubt_space_same_type.cub
subject dice: "each type of element can be separated by one or more empty lines"
como interpretamos esto? podría ser el espacio entre colores y texturas, no lineas entre distintos elementos de texturas, por ejemplo
-> Según se indica en el subject yo entiendo que sólo puede existir un salto
   de línea entre colores, texturas o colores y texturas. Un espacio para
   mí sería inválido porque ya no es 'empty line'. Tal como lo tenemos 
   configurado estaría OK.


(mikel)
mapa: wrong_no_break_line.cub
subject no dice que los tipos de elementos tengan que ser separados por lineas obligatoriamente
-> No lo dice pero yo no me preocuparía por ello. Además, esa posibilidad 
   queda excluída por esto 'Each element (except the map) firsts information
   is the type identifier'. Si tenemos un color seguido de una textura,
   la textura no sería correcta. También debe estar la información 
   específica de cada tipo, no de otros tipos.

(mikel)
mapa: empty.cub
printea error: "No players or more than one"



(mikel)
mapa: no_error_message.cub, player_at_border.cub
cuando el mapa es invalido por espacio en mal sitio, 0 en borde, posición inicial en borde
no parsea pero tampoco printea mensaje de error (eso creo que ya lo habías identificado)

(mikel)
mapa: no_map.cub
printea: "No players or more than one" cuando no hay mapa en el .cub, damos por bueno?
-> Veo cómo corregirlo y poner un error de NO_MAP con la variable
   track_elems->map_flag




A partir de aquí todo hace referencia al mapa:

abierto no da error -> NOT OK ||| (mikel) tengo que mirar la lógica en not_sealed_map()

con espacio en medio de una línea no hace el parseo y no da un mensaje de error
-> NOT OK

con espacios al final -> OK

con espacios al principio -> OK

con líneas en medio -> OK (detecta el error)

con + de 1 jugador -> OK

con carácteres inválidos -> OK

con salto de línea por medio -> OK

con algo distinto(cualquier cosa) en una línea intermedia -> OK

con una fila de mapa en medio de las texturas o colores -> OK  
